 import java.io.ByteArrayInputStream;
import org.apache.http.HttpEntity;
import org.apache.http.entity.InputStreamEntity;
    public void testConsumesErrorResponseWhenServingStale()
            throws Exception{
        Date tenSecondsAgo = new Date(new Date().getTime() - 10 * 1000L);
        HttpRequest req1 = HttpTestUtils.makeDefaultRequest();
        HttpResponse resp1 = HttpTestUtils.make200Response(tenSecondsAgo,
                "public, max-age=5, stale-if-error=60");
        backendExpectsAnyRequest().andReturn(resp1);
        HttpRequest req2 = HttpTestUtils.makeDefaultRequest();
        HttpResponse resp2 = HttpTestUtils.make500Response();
        byte[] body = HttpTestUtils.getRandomBytes(101);
        ByteArrayInputStream buf = new ByteArrayInputStream(body);
        ConsumableInputStream cis = new ConsumableInputStream(buf);
        HttpEntity entity = new InputStreamEntity(cis, 101);
        resp2.setEntity(entity);
        backendExpectsAnyRequest().andReturn(resp2);
        replayMocks();
        impl.execute(host,req1);
        impl.execute(host,req2);
        verifyMocks();
        assertTrue(cis.wasClosed());
    }
    
    @Test
