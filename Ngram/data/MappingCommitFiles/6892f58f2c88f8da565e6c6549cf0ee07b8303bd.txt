 import java.util.HashSet;
import java.util.Set;
import org.apache.http.client.cache.HeaderConstants;
    @Test
    public void testBuildConditionalRequestFromVariants() throws Exception {
        String etag1 = "123";
        String etag2 = "456";
        String etag3 = "789";
        Set<HttpCacheEntry> variantEntries = new HashSet<HttpCacheEntry>();
        variantEntries.add(HttpTestUtils.makeCacheEntry(new Header[] { new BasicHeader("ETag", etag1) }));
        variantEntries.add(HttpTestUtils.makeCacheEntry(new Header[] { new BasicHeader("ETag", etag2) }));
        variantEntries.add(HttpTestUtils.makeCacheEntry(new Header[] { new BasicHeader("ETag", etag3) }));
        HttpRequest conditional = impl.buildConditionalRequestFromVariants(request, variantEntries);
        // seems like a lot of work, but necessary, check for existence and exclusiveness
        String ifNoneMatch = conditional.getFirstHeader(HeaderConstants.IF_NONE_MATCH).getValue();
        Assert.assertTrue(ifNoneMatch.contains(etag1));
        Assert.assertTrue(ifNoneMatch.contains(etag2));
        Assert.assertTrue(ifNoneMatch.contains(etag3));
        ifNoneMatch = ifNoneMatch.replace(etag1, "");
        ifNoneMatch = ifNoneMatch.replace(etag2, "");
        ifNoneMatch = ifNoneMatch.replace(etag3, "");
        ifNoneMatch = ifNoneMatch.replace(",","");
        ifNoneMatch = ifNoneMatch.replace(" ", "");
        Assert.assertEquals(ifNoneMatch, "");
    }
    @Test
    public void testBuildConditionalRequestFromVariantsWithNoETags() throws Exception {
        Set<HttpCacheEntry> variantEntries = new HashSet<HttpCacheEntry>();
        variantEntries.add(HttpTestUtils.makeCacheEntry());
        variantEntries.add(HttpTestUtils.makeCacheEntry());
        variantEntries.add(HttpTestUtils.makeCacheEntry());
        HttpRequest conditional = impl.buildConditionalRequestFromVariants(request, variantEntries);
        Assert.assertNull(conditional.getFirstHeader(HeaderConstants.IF_NONE_MATCH));
    }
    @Test
    public void testBuildConditionalRequestFromVariantsMixedETagPresence() throws Exception {
        String etag1 = "123";
        String etag2 = "456";
        Set<HttpCacheEntry> variantEntries = new HashSet<HttpCacheEntry>();
        variantEntries.add(HttpTestUtils.makeCacheEntry());
        variantEntries.add(HttpTestUtils.makeCacheEntry(new Header[] { new BasicHeader("ETag", etag1) }));
        variantEntries.add(HttpTestUtils.makeCacheEntry(new Header[] { new BasicHeader("ETag", etag2) }));
        HttpRequest conditional = impl.buildConditionalRequestFromVariants(request, variantEntries);
        // seems like a lot of work, but necessary, check for existence and exclusiveness
        String ifNoneMatch = conditional.getFirstHeader(HeaderConstants.IF_NONE_MATCH).getValue();
        Assert.assertTrue(ifNoneMatch.contains(etag1));
        Assert.assertTrue(ifNoneMatch.contains(etag2));
        ifNoneMatch = ifNoneMatch.replace(etag1, "");
        ifNoneMatch = ifNoneMatch.replace(etag2, "");
        ifNoneMatch = ifNoneMatch.replace(",","");
        ifNoneMatch = ifNoneMatch.replace(" ", "");
        Assert.assertEquals(ifNoneMatch, "");
    }
